<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cfengine on Steven Kreuzer</title><link>https://steven.kreuzer.cx/tags/cfengine/</link><description>Recent content in cfengine on Steven Kreuzer</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Steven Kreuzer</copyright><lastBuildDate>Wed, 28 Dec 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://steven.kreuzer.cx/tags/cfengine/index.xml" rel="self" type="application/rss+xml"/><item><title>Detecting Virtual Machines in CFEngine</title><link>https://steven.kreuzer.cx/posts/cfengine-virtual-machines/</link><pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/cfengine-virtual-machines/</guid><description>Out of the box CFEngine has some support for detecting if it is running on top of a hypervisor. Unfortunately, it appears that a regression was introduced in 3.6.0 which prevented cf-agent from detecting Xen and this functunality appears to have has never worked on FreeBSD as well.
I submitted a pull request which addresses the issue documented in CFE-1563 but it will not be included in CFEngine 3.10 and right now only fixes the issue on Linux.</description></item><item><title>Use realpath to work around the CFEngine 3.5.3 symlink change</title><link>https://steven.kreuzer.cx/posts/using-realpath/</link><pubDate>Sat, 25 Jan 2014 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/using-realpath/</guid><description>In CFEngine 3.5.3, a symlink created by a user pointing to resources owned by a different user is no longer followed. This is an intential change and while it makes sense from a security standpoint, people who came to depend on the old behavior and built tooling and infrastructre around it found themselves in a bit of a bind.
As best as I can tell there is no way to override this behavior and the end result is that it is causing several promises which are part of my release process to fail.</description></item><item><title>Aborting execution of cf-agent</title><link>https://steven.kreuzer.cx/posts/aborting-cfagent-execution/</link><pubDate>Mon, 28 Oct 2013 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/aborting-cfagent-execution/</guid><description>From time to time it might be necessary to temporary halt the execution of cf-agent for any number of reasons. If during a run the class halt_cfagent gets defined, cf-agent will exit its current run</description></item></channel></rss>