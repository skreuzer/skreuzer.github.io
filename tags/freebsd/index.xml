<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>freebsd on Steven Kreuzer</title><link>https://steven.kreuzer.cx/tags/freebsd/</link><description>Recent content in freebsd on Steven Kreuzer</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Steven Kreuzer</copyright><lastBuildDate>Sat, 24 Dec 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://steven.kreuzer.cx/tags/freebsd/index.xml" rel="self" type="application/rss+xml"/><item><title>Using blowfish for password hashes in FreeBSD</title><link>https://steven.kreuzer.cx/posts/blowfish/</link><pubDate>Sat, 24 Dec 2011 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/blowfish/</guid><description>FreeBSD uses sha512 to encrypted passwords for user accounts. However, blowfish is available in all recent versions of FreeBSD and its easy to change the default crypt method to use blowfish instead
In /etc/login.conf change
:passwd_format=sha512: to
:passwd_format=blf: and recreate the login capability database with the command cap_mkdb /etc/login.conf
Now have each user change their password. Start with your current login.
$ passwd Changing local password for {current user}.</description></item><item><title>Stepping the system clock during boot</title><link>https://steven.kreuzer.cx/posts/step-clock-at-boot/</link><pubDate>Mon, 19 Dec 2011 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/step-clock-at-boot/</guid><description>FreeBSD allows you to perform an instantaneous change to your system clock while the host is booting up no matter how great the difference between a machine&amp;rsquo;s current clock setting and the correct time.
Use the sysrc command as root to append ntpdate_enable and ntpdate_hosts to /etc/rc.conf
$ sysrc ntpdate_enable=YES ntpdate_enable: NO -&amp;gt; YES $ sysrc ntpdate_hosts=north-america.pool.ntp.org ntpdate_hosts: -&amp;gt; north-america.pool.ntp.org Finally, to verify that everything worked correctly
$ grep ntpdate /etc/rc.</description></item><item><title>Running csup from periodic</title><link>https://steven.kreuzer.cx/posts/running-csup-from-periodic/</link><pubDate>Mon, 05 Jul 2010 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/running-csup-from-periodic/</guid><description>I keep a copy of the FreeBSD source and ports repository locally on disk so its possible for me to work offline and still be able to review the revision history of a file or views diffs. I have been running csup from the root crontab at night to keep my local copy fairly up to date.
However, I rewrote the script to be a job that is executed by periodic and then have the output of csup included with the daily run output emails I get each morning so I can quickly see the changes to the ports tree.</description></item><item><title>Reflections after one year</title><link>https://steven.kreuzer.cx/posts/reflections-after-one-year/</link><pubDate>Thu, 11 Mar 2010 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/reflections-after-one-year/</guid><description>Today marks my 1 year anniversary as a FreeBSD developer. I opened my first Problem Report in 2006 and after roughly three years of hacking on the ports system, wxs@ offered to mentor me and on March 11th, 2009 I received an email saying that the port-mgr@ team approved his request for a commit bit for me. I happened to be on vacation in Mexico when I got the email, and just like that a good day turned even better.</description></item><item><title>Sun v210 Donation</title><link>https://steven.kreuzer.cx/posts/sun-v210-donation/</link><pubDate>Thu, 11 Mar 2010 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/sun-v210-donation/</guid><description>Thanks to a generous donation by Nathan Whitehorn, a Sun SunFire v210 is sitting on the floor of my office waiting to have FreeBSD installed on it. Since this is the fastest sparc64 machine we have, Mark Linimon and I are planning on using it as a package building machine. However, if there is any other developer who would like to use it as a reference platform, please get in touch with me and I will set you up with access.</description></item><item><title>Creating a File-Backed Disk with mdconfig</title><link>https://steven.kreuzer.cx/posts/memory-backed-disk/</link><pubDate>Mon, 02 Oct 2006 00:00:00 +0000</pubDate><guid>https://steven.kreuzer.cx/posts/memory-backed-disk/</guid><description>$ dd if=/dev/zero of=newimage bs=1k count=5k 5120+0 records in 5120+0 records out $ mdconfig -a -t vnode -f newimage -u 0 $ bsdlabel -w md0 auto $ newfs md0a /dev/md0a: 5.0MB (10224 sectors) block size 16384, fragment size 2048 using 4 cylinder groups of 1.25MB, 80 blks, 192 inodes. super-block backups (for fsck -b #) at: 160, 2720, 5280, 7840 $ mount /dev/md0a /mnt $ df /mnt Filesystem 1K-blocks Used Avail Capacity Mounted on /dev/md0a 4710 4 4330 0% /mnt ```sh</description></item></channel></rss>